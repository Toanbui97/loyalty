# secret
apiVersion: v1
kind: Secret
metadata:
  name: loyalty-cms
type: Opaque
data:
  DB_PASWORD: cG9zdGdyZXM=

---
# configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: loyalty-cms
data:
  ACTIVE_PROFILE: dev
  KAFKA_SERVERS: "52.196.64.186"
  REDIS_HOST: "52.196.64.186"
  REDIS_PORT: "6379"
  SHOW_SQL: "false"
  SERVER_PORT: "8080"
  DB_HOST: "52.196.64.186"
  DB_PORT: "5433"
  DB_NAME: loyalty
  DB_SCHEMA: cms
  DB_USER: postgres
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loyalty-cms
  labels:
    app: loyalty-cms
spec:
  replicas: 2
  selector:
    matchLabels:
      app: loyalty-cms
  template:
    metadata:
      labels:
        app: loyalty-cms
    spec:
      containers:
        - name: loyalty-cms
          image: toanbv1997/loyalty-cms:1.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "0.2"
              memory: 300Mi
          envFrom:
            - configMapRef:
                name: loyalty-cms
            - secretRef:
                name: loyalty-cms
          readinessProbe:
            httpGet:
              port: 8080
              path: /cms/actuator/health
            initialDelaySeconds: 120
            timeoutSeconds: 20
            periodSeconds: 600
            failureThreshold: 5
          livenessProbe:
              httpGet:
                port: 8080
                path: /cms/actuator/info
              initialDelaySeconds: 120
              timeoutSeconds: 20
              periodSeconds: 600
              failureThreshold: 5

---
# service
apiVersion: v1
kind: Service
metadata:
  name: loyalty-cms
  labels:
    app: loyalty-cms
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: loyalty-cms
